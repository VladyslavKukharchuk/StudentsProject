version: '3.9'

services:

#  nodejs:
#    container_name: nodejs
#    build: .
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - postgres
#      - mongo
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    networks:
#      - app-network
#    ports:
#      - ${PORT}:${PORT}
#    links:
#      - mongo
#      - postgres
#      - redis
#    environment:
#      MONGODB_DB_HOST: mongo
#      EDIS_DB_HOST: redis
#      POSTGRES_DB_HOST: postgres
#    restart: always
#    command: npm run start

  postgres:
    container_name: postgres
    image: postgres:15.1
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    networks:
      - app-network
    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  mongo:
    container_name: mongo
    image: mongo:6.0.4
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    ports:
          #      - "6379:6379"
      - ${MONGODB_DB_PORT}:${MONGODB_DB_PORT}
    restart: always

  redis:
    container_name: redis
    env_file:
      - .env
    image: redis:7.0
    networks:
      - app-network
    ports:
#      - "6379:6379"
      - ${REDIS_DB_PORT}:${REDIS_DB_PORT}
    restart: always

networks:
  app-network:
#    driver: bridge

volumes:
  postgres-data: {}
  mongo-data:
#  redis-data: